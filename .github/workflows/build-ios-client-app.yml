name: Build Client iOS App

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'apps/client/**'
      - '.github/workflows/build-ios-client-app.yml'
  workflow_dispatch:
    inputs:
      server_url:
        description: 'Server URL for the app to connect to'
        required: false
        default: 'https://app.ibimina.rw'

jobs:
  build:
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.19.0
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Build packages
        run: pnpm run build --filter @ibimina/config --filter @ibimina/ui
      
      - name: Configure Capacitor server URL
        if: github.event.inputs.server_url != ''
        env:
          SERVER_URL: ${{ github.event.inputs.server_url }}
        run: |
          cd apps/client
          sed -i '' "s|https://.*kirk.replit.dev|$SERVER_URL|g" capacitor.config.ts
          sed -i '' "s|https://.*kirk.replit.dev|$SERVER_URL|g" .next-static/index.html
      
      - name: Add iOS platform
        run: |
          cd apps/client
          npx cap add ios || echo "iOS platform already exists"
      
      - name: Install CocoaPods dependencies
        run: |
          cd apps/client/ios/App
          pod install
      
      - name: Sync Capacitor
        run: |
          cd apps/client
          npx cap sync ios
      
      - name: Build iOS App
        run: |
          cd apps/client/ios/App
          xcodebuild -workspace App.xcworkspace \
            -scheme App \
            -configuration Debug \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 15' \
            -derivedDataPath build \
            build
      
      - name: Create .app archive
        run: |
          cd apps/client/ios/App/build/Build/Products/Debug-iphonesimulator
          zip -r Ibimina-iOS-Simulator.zip App.app
      
      - name: Upload iOS App
        uses: actions/upload-artifact@v4
        with:
          name: ibimina-client-ios-simulator
          path: apps/client/ios/App/build/Build/Products/Debug-iphonesimulator/Ibimina-iOS-Simulator.zip
          retention-days: 30
      
      - name: Create Release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: apps/client/ios/App/build/Build/Products/Debug-iphonesimulator/Ibimina-iOS-Simulator.zip
          name: Client App (iOS) ${{ github.ref_name }}
          body: |
            ## Ibimina Client Mobile App (iOS)
            
            **Version**: ${{ github.ref_name }}
            **Platform**: iOS Simulator (Debug Build)
            **Server**: ${{ github.event.inputs.server_url || 'Default' }}
            
            ### Installation
            1. Download and unzip the file
            2. Drag App.app to your iOS Simulator
            3. Or install via: `xcrun simctl install booted App.app`
            
            ### Features
            - üí∞ Wallet management (balance, transactions, statements)
            - üìä Loan applications and tracking
            - üë• Group savings management
            - üí≥ Mobile money integration (MTN, Airtel)
            - üì± WhatsApp OTP authentication
            - üåç Multi-language support (English, French, Kinyarwanda)
            - üìµ Offline support
            - üîí Face ID / Touch ID biometric authentication
            - üìà Real-time updates
            
            **Note**: This is a simulator build. For physical devices, build locally with Xcode.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-testflight:
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.19.0
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Build packages
        run: pnpm run build --filter @ibimina/config --filter @ibimina/ui
      
      - name: Add iOS platform
        run: |
          cd apps/client
          npx cap add ios || echo "iOS platform already exists"
      
      - name: Install CocoaPods dependencies
        run: |
          cd apps/client/ios/App
          pod install
      
      - name: Sync Capacitor
        run: |
          cd apps/client
          npx cap sync ios
      
      - name: Import Code Signing Certificates
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.IOS_CERTIFICATES_P12 }}
          p12-password: ${{ secrets.IOS_CERTIFICATES_PASSWORD }}
      
      - name: Download Provisioning Profiles
        uses: apple-actions/download-provisioning-profiles@v1
        with:
          bundle-id: rw.ibimina.client
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
      
      - name: Build and Archive
        run: |
          cd apps/client/ios/App
          xcodebuild -workspace App.xcworkspace \
            -scheme App \
            -configuration Release \
            -sdk iphoneos \
            -archivePath build/App.xcarchive \
            archive
      
      - name: Export IPA
        run: |
          cd apps/client/ios/App
          xcodebuild -exportArchive \
            -archivePath build/App.xcarchive \
            -exportPath build \
            -exportOptionsPlist ExportOptions.plist
      
      - name: Upload to TestFlight
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: apps/client/ios/App/build/App.ipa
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
      
      - name: Upload IPA Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ibimina-client-ios-release
          path: apps/client/ios/App/build/App.ipa
          retention-days: 90

name: Node Quality Checks

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  lint:
    name: Lint (${{ matrix.label }})
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.allow_failure }}
    strategy:
      matrix:
        include:
          - label: Admin app
            filter: "@ibimina/admin"
            allow_failure: false
          - label: Client app
            filter: "@ibimina/client"
            allow_failure: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.19.0
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Derive pnpm store path
        run: echo "PNPM_STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run lint
        run: pnpm --filter ${{ matrix.filter }} run lint

  typecheck:
    name: Typecheck (@ibimina/admin)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.19.0
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Derive pnpm store path
        run: echo "PNPM_STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run typecheck
        run: pnpm --filter @ibimina/admin run typecheck

  build:
    name: Build (@ibimina/admin)
    needs: typecheck
    runs-on: ubuntu-latest
    env:
      NEXT_TELEMETRY_DISABLED: "1"
      CI: "true"
      NEXT_PUBLIC_SUPABASE_URL: "https://placeholder.supabase.co"
      NEXT_PUBLIC_SUPABASE_ANON_KEY: "placeholder-anon-key"
      SUPABASE_SERVICE_ROLE_KEY: "placeholder-service-role-key"
      BACKUP_PEPPER: "placeholder-backup-pepper-32-bytes-min"
      MFA_SESSION_SECRET: "placeholder-mfa-session-secret-32b"
      TRUSTED_COOKIE_SECRET: "placeholder-trusted-cookie-secret"
      HMAC_SHARED_SECRET: "placeholder-hmac-shared-secret-32"
      OPENAI_API_KEY: "placeholder-openai-api-key"
      KMS_DATA_KEY_BASE64: "MDEyMzQ1Njc4OUFCQ0RFRjAxMjM0NTY3ODlBQkNERUY="
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.19.0
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Derive pnpm store path
        run: echo "PNPM_STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build admin app
        run: pnpm --filter @ibimina/admin run build

  validate-supabase-types:
    name: Validate Supabase types
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.19.0
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Derive pnpm store path
        run: echo "PNPM_STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1

      - name: Validate generated Supabase types
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: scripts/check-supabase-types.sh

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    namespace "rw.ibimina.client"
    compileSdk rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "rw.ibimina.client"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
             // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
             // Default: https://android.googlesource.com/platform/frameworks/base/+/282e181b58cf72b6ca770dc7ca5f91f135444502/tools/aapt/AaptAssets.cpp#61
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion "1.5.15"
    }

    kotlinOptions {
        jvmTarget = "17"
    }
}

repositories {
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-cordova-android-plugins')

    // Biometric Authentication
    implementation "androidx.biometric:biometric:1.2.0-alpha05"

    // Work Manager for background tasks
    implementation "androidx.work:work-runtime:2.9.1"
    implementation "androidx.work:work-runtime-ktx:2.9.1"
    
    // Google Play Services for enhanced features
    implementation "com.google.android.gms:play-services-location:21.3.0"
    implementation "com.google.android.gms:play-services-maps:19.0.0"
    implementation "com.google.android.gms:play-services-auth:21.2.0"
    
    // Camera and image processing
    implementation "androidx.camera:camera-camera2:1.4.1"
    implementation "androidx.camera:camera-lifecycle:1.4.1"
    implementation "androidx.camera:camera-view:1.4.1"

    // Material Design components
    implementation "com.google.android.material:material:1.12.0"

    // Compose UI
    implementation platform("androidx.compose:compose-bom:2024.09.02")
    implementation "androidx.activity:activity-compose:1.9.3"
    implementation "androidx.compose.material3:material3"
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation "androidx.compose.material:material-icons-extended"
    debugImplementation "androidx.compose.ui:ui-tooling"
    debugImplementation "androidx.compose.ui:ui-test-manifest"

    // Lifecycle & Coroutines
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.8.6"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.9.0"

    // Room persistence
    implementation "androidx.room:room-runtime:2.6.1"
    implementation "androidx.room:room-ktx:2.6.1"
    kapt "androidx.room:room-compiler:2.6.1"
    androidTestImplementation "androidx.room:room-testing:2.6.1"

    // Testing utilities
    androidTestImplementation "androidx.test:core:1.6.1"
    androidTestImplementation "org.mockito:mockito-android:5.13.0"
    androidTestImplementation "org.mockito.kotlin:mockito-kotlin:5.2.1"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.9.0"
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}

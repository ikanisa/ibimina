{
  "analysis_date": "2025-10-27",
  "tool_versions": {
    "eslint": "9.37.0",
    "typescript": "5.9.3",
    "typescript_eslint": "8.46.2"
  },
  "summary": {
    "total_errors": 7,
    "eslint_errors": 3,
    "typescript_errors": 4,
    "total_warnings": 0,
    "files_with_issues": 2
  },
  "eslint_findings": {
    "errors": [
      {
        "file": "apps/admin/app/(main)/admin/(panel)/reconciliation/page.tsx",
        "line": 130,
        "column": 20,
        "rule": "@typescript-eslint/no-explicit-any",
        "severity": "error",
        "message": "Unexpected any. Specify a different type",
        "fix_suggestion": "Replace 'any' with specific type (e.g., 'Record<string, unknown>' or specific interface)",
        "priority": "high",
        "category": "type_safety"
      },
      {
        "file": "apps/admin/app/(main)/admin/(panel)/reconciliation/page.tsx",
        "line": 135,
        "column": 20,
        "rule": "@typescript-eslint/no-explicit-any",
        "severity": "error",
        "message": "Unexpected any. Specify a different type",
        "fix_suggestion": "Replace 'any' with specific type",
        "priority": "high",
        "category": "type_safety"
      },
      {
        "file": "apps/admin/app/(main)/admin/(panel)/reconciliation/page.tsx",
        "line": 142,
        "column": 17,
        "rule": "react-hooks/purity",
        "severity": "error",
        "message": "Cannot call impure function during render. Date.now() is an impure function",
        "fix_suggestion": "Move Date.now() call to useMemo or useEffect hook, or calculate at component mount",
        "priority": "critical",
        "category": "react_best_practices",
        "impact": "Can cause unstable results when component re-renders"
      }
    ],
    "warnings": []
  },
  "typescript_findings": {
    "errors": [
      {
        "file": "apps/client/lib/api/saccos.ts",
        "line": 61,
        "column": 46,
        "code": "TS2345",
        "message": "Argument of type '\"search_saccos\"' is not assignable to parameter of type 'never'",
        "fix_suggestion": "Regenerate Supabase types or add proper type definitions for search_saccos function",
        "priority": "high",
        "category": "type_mismatch"
      },
      {
        "file": "apps/client/lib/api/saccos.ts",
        "line": 102,
        "column": 46,
        "code": "TS2345",
        "message": "Argument of type '\"search_saccos\"' is not assignable to parameter of type 'never'",
        "fix_suggestion": "Same as above - regenerate Supabase types",
        "priority": "high",
        "category": "type_mismatch"
      },
      {
        "file": "apps/client/lib/api/saccos.ts",
        "line": 127,
        "column": 11,
        "code": "TS2769",
        "message": "No overload matches this call. Argument of type '\"saccos\"' is not assignable to parameter",
        "fix_suggestion": "Update Supabase client types to include 'saccos' table or verify database schema",
        "priority": "high",
        "category": "type_mismatch"
      },
      {
        "file": "apps/client/lib/api/saccos.ts",
        "line": 137,
        "column": 10,
        "code": "TS2352",
        "message": "Conversion of type 'SelectQueryError' to type 'SaccoSearchResult' may be a mistake",
        "fix_suggestion": "Add proper error handling with type guards instead of type casting",
        "priority": "medium",
        "category": "error_handling"
      }
    ]
  },
  "code_smells": [
    {
      "type": "impure_render",
      "file": "apps/admin/app/(main)/admin/(panel)/reconciliation/page.tsx",
      "line": 142,
      "description": "Calling Date.now() during component render",
      "impact": "Component behavior becomes unpredictable on re-renders",
      "recommendation": "Extract to useMemo with empty deps array or move to useEffect",
      "severity": "high"
    },
    {
      "type": "weak_typing",
      "files": [
        "apps/admin/app/(main)/admin/(panel)/reconciliation/page.tsx:130",
        "apps/admin/app/(main)/admin/(panel)/reconciliation/page.tsx:135"
      ],
      "description": "Use of 'any' type reduces type safety",
      "impact": "Runtime type errors not caught during development",
      "recommendation": "Define proper interfaces or use Record<string, unknown>",
      "severity": "high"
    },
    {
      "type": "type_mismatch",
      "file": "apps/client/lib/api/saccos.ts",
      "description": "Supabase generated types may be outdated or incomplete",
      "impact": "Type checking not effective for database queries",
      "recommendation": "Run 'supabase gen types typescript' to regenerate types",
      "severity": "high"
    }
  ],
  "unused_imports_analysis": {
    "status": "not_detected",
    "note": "ESLint configuration includes no-unused-vars rule. Current scan did not detect unused imports in files with errors. A full codebase scan with --cache false may reveal additional unused imports.",
    "recommendation": "Run: pnpm eslint . --fix to automatically remove unused imports"
  },
  "packages_without_linting": [
    {
      "package": "packages/config",
      "status": "TODO: add linting",
      "priority": "medium"
    },
    {
      "package": "packages/core",
      "status": "TODO: add linting",
      "priority": "high",
      "note": "Core package should have strict linting"
    },
    {
      "package": "packages/testing",
      "status": "TODO: add linting",
      "priority": "medium"
    },
    {
      "package": "packages/ui",
      "status": "TODO: add linting",
      "priority": "high",
      "note": "UI components should have consistent linting rules"
    },
    {
      "package": "apps/platform-api",
      "status": "TODO: add linting",
      "priority": "medium",
      "note": "Future API service needs linting setup"
    }
  ],
  "recommendations": {
    "immediate": [
      {
        "action": "Fix React purity violation",
        "file": "apps/admin/app/(main)/admin/(panel)/reconciliation/page.tsx",
        "line": 142,
        "code_example": "const now = useMemo(() => Date.now(), []);"
      },
      {
        "action": "Replace 'any' types",
        "files": [
          "apps/admin/app/(main)/admin/(panel)/reconciliation/page.tsx:130",
          "apps/admin/app/(main)/admin/(panel)/reconciliation/page.tsx:135"
        ],
        "suggestion": "Define proper types or use Record<string, unknown>"
      },
      {
        "action": "Regenerate Supabase types",
        "command": "supabase gen types typescript --local > lib/supabase/types.ts",
        "affects": "apps/client/lib/api/saccos.ts"
      }
    ],
    "short_term": [
      {
        "action": "Add ESLint to all packages",
        "packages": [
          "packages/config",
          "packages/core",
          "packages/testing",
          "packages/ui",
          "apps/platform-api"
        ]
      },
      {
        "action": "Run unused imports cleanup",
        "command": "pnpm eslint . --fix"
      },
      {
        "action": "Enable strict TypeScript mode",
        "suggestion": "Consider enabling 'strict: true' in tsconfig for new packages"
      }
    ]
  },
  "ci_integration": {
    "current_status": "ESLint runs with --max-warnings=0",
    "recommendation": "Maintain zero-warning policy",
    "suggested_additions": [
      "Add pre-commit hooks for linting",
      "Consider adding complexity metrics (e.g., sonarqube)",
      "Add automated type checking to all packages in CI"
    ]
  }
}
